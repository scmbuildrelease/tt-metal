name: "[internal] Blackhole Multi-card Demo tests impl"

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      runner-label:
        type: string
        default: "BH-LLMBox"
      extra-tag:
        type: string
        default: "pipeline-perf"
      num_devices:
        type: number
        default: 4

# ---------- YAML anchors for reuse ----------
x-common-runs-on: &common-runs-on
  - "in-service"
  - arch-blackhole
  - "${{ inputs.runner-label }}"
  - "${{ inputs.extra-tag }}"

x-common-container: &common-container
  image: ${{ inputs.docker-image || 'docker-image-unresolved' }}
  env:
    ARCH_NAME: ${{ matrix.test-group.arch }}             # FIX: use matrix value
    LOGURU_LEVEL: INFO
    LD_LIBRARY_PATH: /work/build/lib
    PYTHONPATH: /work
    TT_METAL_HOME: /work
    HF_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
  volumes:
    - ${{ github.workspace }}/docker-job:/work                   # runner bug workaround
    - /dev/hugepages-1G:/dev/hugepages-1G
    - ${{ inputs.extra-tag == 'pipeline-functional' && '/mnt/MLPerf/tt_dnn-models' || '/localdev/blackhole_demos/huggingface_data' }}:/localdev/blackhole_demos/huggingface_data:ro
    # Caches to speed up repeated runs:
    - ${{ github.workspace }}/.cache/pip:/root/.cache/pip
    - ${{ github.workspace }}/.cache/huggingface:/root/.cache/huggingface
  options: "--device /dev/tenstorrent"

x-common-defaults: &common-defaults
  run:
    shell: bash
    working-directory: /work

x-common-setup-steps: &common-setup-steps
  - name: ⬇️  Setup Job
    uses: tenstorrent/tt-metal/.github/actions/setup-job@main
    timeout-minutes: 10
    with:
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
  - name: ✅ Check secrets
    run: |
      set -euo pipefail
      if [[ -z "${HF_TOKEN:-}" ]]; then
        echo "HF_TOKEN is not set; refusing to run demos that require model pulls."
        exit 1
      fi

# ---------- Jobs ----------
jobs:
  multi-card-demo-tests:
    name: ${{ matrix.test-group.name }}
    runs-on: *common-runs-on
    container: *common-container
    defaults: *common-defaults
    timeout-minutes: 90
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        test-group:
          - name: "llama3.1-8b ${{ inputs.runner-label }} data-parallel=${{ inputs.num_devices }} performance"
            arch: blackhole
            cmd: >
              LLAMA_DIR=/localdev/blackhole_demos/huggingface_data/meta-llama/Llama-3.1-8B-Instruct
              pytest models/tt_transformers/demo/simple_text_demo.py
              -k "performance and ci-32" --data_parallel ${{ inputs.num_devices }}
            owner_id: U05RWH3QUPM # Salar Hosseini
          - name: "llama3.1-8b ${{ inputs.runner-label }} data-parallel=${{ inputs.num_devices }} stress"
            arch: blackhole
            cmd: >
              LLAMA_DIR=/localdev/blackhole_demos/huggingface_data/meta-llama/Llama-3.1-8B-Instruct
              pytest models/tt_transformers/demo/simple_text_demo.py
              -k "performance-ci-stress-1" --data_parallel ${{ inputs.num_devices }} --max_generated_tokens 22000
            owner_id: U03PUAKE719 # Miguel Tairum
            allow_fail: true
    steps:
      - *common-setup-steps
      - name: Install demo deps (conditional)
        run: |
          set -euo pipefail
          if [[ "${{ matrix.test-group.name }}" == *"llama"* ]]; then
            pip install -r /work/models/tt_transformers/requirements.txt
          fi
      - name: Run demo regression tests
        timeout-minutes: 70
        continue-on-error: ${{ matrix.test-group.allow_fail || false }}
        run: |
          set -euo pipefail
          ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ always() }}     # keep logs even on failure/cancel
        with:
          prefix: "test_reports_${{ matrix.test-group.arch }}_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner_id }}

  multi-card-demo-tests-large:
    if: ${{ inputs.num_devices >= 4 }}
    name: ${{ matrix.test-group.name }}
    runs-on: *common-runs-on
    container: *common-container
    defaults: *common-defaults
    timeout-minutes: 120
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        test-group:
          - name: "llama3.3-70b ${{ inputs.runner-label }} batch-32 performance"
            arch: blackhole
            cmd: >
              LLAMA_DIR=/localdev/blackhole_demos/huggingface_data/meta-llama/Llama-3.3-70B-Instruct
              pytest models/tt_transformers/demo/simple_text_demo.py -k "performance and ci-32"
            owner_id: U03PUAKE719
    steps:
      - *common-setup-steps
      - uses: tenstorrent/tt-metal/.github/actions/ensure-bh-links-online@main
        with:
          runner-label: ${{ inputs.runner-label }}
      - name: Install demo deps (conditional)
        run: |
          set -euo pipefail
          if [[ "${{ matrix.test-group.name }}" == *"llama"* ]]; then
            pip install -r /work/models/tt_transformers/requirements.txt
          fi
      - name: Run demo regression tests
        timeout-minutes: 90
        run: |
          set -euo pipefail
          ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          prefix: "test_reports_${{ matrix.test-group.arch }}_"
      - uses: tenstorrent/tt-metal/.github/actions/slack-report@main
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner_id }}
